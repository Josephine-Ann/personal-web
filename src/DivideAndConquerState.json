[
    {
        "text": "card",
        "liftFixed": "lift-fixed",
        "animationBackground": "animation-background",
        "layout": "layout",
        "man": "background-man hidden",
        "arrowUp": "fas fa-arrow-up hidden",
        "arrowDown": "fas fa-arrow-down hidden",
        "textDC": "Imagina que estás en un ascensor..."
    },
    {
        "0": "card--no-writing__animated",
        "1": "card--no-writing"
    },
    {
        "0": "card",
        "1": "card finished"
    },
    {
        "0": "lift-fixed",
        "1": "lift-fixed finished"
    },
    {
        "0": "animation-background",
        "1": "animation-background__animated",
        "2": "animation-background finished"
    },
    {
        "0": "layout",
        "1": "layout-animation-finished"
    },
    {
        "0": "background-man hidden",
        "1": "background-man slowly-appear"
    },
    {
        "0": "fas fa-arrow-up hidden",
        "1": "fas fa-arrow-up"
    },
    {
        "0": "fas fa-arrow-down hidden",
        "1": "fas fa-arrow-down"
    },
    {
        "0": "Y estás intentando encontrar algo...",
        "1": "El problema es que solo sabes el número de la planta en binario.",
        "2": "Y no entiendes binario.",
        "3": "En cada planta, hay un hombre...",
        "4": "Él tiene un cartel con el número de la planta en binario...",
        "5": "Pero no habla...",
        "6": "Él explica dónde te tienes que ir...",
        "7": "Señalando con la mano...",
        "8": "¿Qué haces?",
        "9": "¿Simplemente compruebas cada planta?",
        "10": "¿O podrías llegar ahí más fácilmente...",
        "11": "Eligiendo un punto en el medio?",
        "12": "Si él señala para abajo o para arriba...",
        "13": "..sabrás a dónde ir...",
        "14": "Y así quitas la mitad de las posibilidades...",
        "15": "Esto es la lógica de Divide and Conquer...",
        "16": "Un patrón de algoritmos que permite...",
        "17": "que encontremos información más rápidamente...",
        "18": "En una lista ordenada...",
        "19": "Imagina que estás en un ascensor..."
    },
    {
        "0": "This is the algorithm pattern that I learnt via Colt Steele's",
        "1": "JavaScript Algorithms and Data Structures Masterclass.",
        "2": "Let's take a look at how me might handle this problem without using this pattern",
        "3": "This approach involves checking every item in the array until we find the one we want.",
        "4": "If we have a big list of data, that could be very costly and slow down our code.",
        "5": "However, if we know our data is in order, we ought to divide it.",
        "6": "If we divide our data, we only have to check one half,",
        "7": "and we'll know which half it is.",
        "8": "Let's take a look:"
    },
    {
        "0": "function search(arr, val) {",
        "1": "for (let i = 0; i < arr.length; i++) {",
        "2": "if (arr[i] === val) {",
        "3": "return i",
        "4": "  }",
        "5": "}",
        "6": "return -1",
        "7": "}"
    },
    {
        "0": "function search(array,val) {",
        "1": " let min = 0;",
        "2": "let max = array.length - 1;",
        "3": "while (min <= max) { ",
        "4": "  let middle = Math.floor((min + max)/2);",
        "5": "let currentElement = array[middle];",
        "6": "if (array[middle] < val) {",
        "7": "min = middle + 1;",
        "8": "}",
        "9": "else if (array[middle]>val) {",
        "10": "max = middle - 1;",
        "11": "} else {",
        "12": "return middle;",
        "13": "}",
        "14": "}",
        "15": "return -1;",
        "17": "}",
        "18": "]"
    }
]